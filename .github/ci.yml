name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Mets la version adaptée

      # - name: Install dependencies
      #   run: npm install

      # - name: Run tests
      #   run: npm test  # Exécute les tests, si ça échoue, le déploiement s'arrête

      - name: Set up SSH
        if: success()  # Exécute cette étape seulement si les tests réussissent
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy application
        if: success()  # Exécute cette étape seulement si les tests réussissent
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<EOF
            # Aller dans le répertoire de l'application
            D:\Cours\Cours Bachelor CSI\Daniel Soudry\react-aws\react-app

            # Mettre à jour le code depuis le dépôt Git
            git pull origin main

            # Arrêter et supprimer le conteneur existant
            docker-compose down

            # Supprimer les images Docker obsolètes
            docker system prune -af
            docker image prune -af

            # Recréer et redémarrer le conteneur
            docker-compose up -d --build
          EOF